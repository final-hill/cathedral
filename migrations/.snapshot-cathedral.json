{
  "namespaces": [
    "public"
  ],
  "name": "public",
  "tables": [
    {
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "uuid"
        },
        "created_by_id": {
          "name": "created_by_id",
          "type": "varchar(766)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 766,
          "mappedType": "string"
        },
        "creation_date": {
          "name": "creation_date",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "req_type": {
          "name": "req_type",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "enumItems": [
            "actor",
            "assumption",
            "behavior",
            "component",
            "constraint",
            "context_and_objective",
            "effect",
            "environment",
            "environment_component",
            "epic",
            "event",
            "example",
            "functional_behavior",
            "functionality",
            "glossary_term",
            "goal",
            "goals",
            "hint",
            "interaction",
            "interface",
            "invariant",
            "justification",
            "limit",
            "meta_requirement",
            "noise",
            "non_functional_behavior",
            "obstacle",
            "project",
            "organization",
            "outcome",
            "parsed_requirements",
            "person",
            "product",
            "requirement",
            "responsibility",
            "role",
            "scenario",
            "scenario_step",
            "silence",
            "solution",
            "stakeholder",
            "system",
            "system_component",
            "task",
            "test_case",
            "use_case",
            "user_story",
            "interface_operation",
            "interface_input",
            "interface_output",
            "interface_data_type",
            "interface_flow"
          ],
          "mappedType": "enum"
        },
        "parsed_requirements_id": {
          "name": "parsed_requirements_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "uuid"
        },
        "scenario_step_id": {
          "name": "scenario_step_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "uuid"
        },
        "parent_scenario_id": {
          "name": "parent_scenario_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "uuid"
        },
        "parent_step_id": {
          "name": "parent_step_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "uuid"
        },
        "use_case_id": {
          "name": "use_case_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "uuid"
        }
      },
      "name": "requirement",
      "schema": "public",
      "indexes": [
        {
          "columnNames": [
            "req_type"
          ],
          "composite": false,
          "keyName": "requirement_req_type_index",
          "constraint": false,
          "primary": false,
          "unique": false
        },
        {
          "keyName": "requirement_pkey",
          "columnNames": [
            "id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "requirement_parsed_requirements_id_foreign": {
          "constraintName": "requirement_parsed_requirements_id_foreign",
          "columnNames": [
            "parsed_requirements_id"
          ],
          "localTableName": "public.requirement",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "requirement_scenario_step_id_foreign": {
          "constraintName": "requirement_scenario_step_id_foreign",
          "columnNames": [
            "scenario_step_id"
          ],
          "localTableName": "public.requirement",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "requirement_parent_scenario_id_foreign": {
          "constraintName": "requirement_parent_scenario_id_foreign",
          "columnNames": [
            "parent_scenario_id"
          ],
          "localTableName": "public.requirement",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "requirement_parent_step_id_foreign": {
          "constraintName": "requirement_parent_step_id_foreign",
          "columnNames": [
            "parent_step_id"
          ],
          "localTableName": "public.requirement",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "requirement_use_case_id_foreign": {
          "constraintName": "requirement_use_case_id_foreign",
          "columnNames": [
            "use_case_id"
          ],
          "localTableName": "public.requirement",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "deleteRule": "set null",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "effective_from": {
          "name": "effective_from",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "requirement_id": {
          "name": "requirement_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "uuid"
        },
        "is_deleted": {
          "name": "is_deleted",
          "type": "boolean",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "boolean"
        },
        "modified_by_id": {
          "name": "modified_by_id",
          "type": "varchar(766)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 766,
          "mappedType": "string"
        },
        "req_type": {
          "name": "req_type",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "enumItems": [
            "actor",
            "assumption",
            "behavior",
            "component",
            "constraint",
            "context_and_objective",
            "effect",
            "environment",
            "environment_component",
            "epic",
            "event",
            "example",
            "functional_behavior",
            "functionality",
            "glossary_term",
            "goal",
            "goals",
            "hint",
            "interaction",
            "interface",
            "invariant",
            "justification",
            "limit",
            "meta_requirement",
            "noise",
            "non_functional_behavior",
            "obstacle",
            "project",
            "organization",
            "outcome",
            "parsed_requirements",
            "person",
            "product",
            "requirement",
            "responsibility",
            "role",
            "scenario",
            "scenario_step",
            "silence",
            "solution",
            "stakeholder",
            "system",
            "system_component",
            "task",
            "test_case",
            "use_case",
            "user_story",
            "interface_operation",
            "interface_input",
            "interface_output",
            "interface_data_type",
            "interface_flow"
          ],
          "mappedType": "enum"
        },
        "workflow_state": {
          "name": "workflow_state",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "default": "'Proposed'",
          "enumItems": [
            "Proposed",
            "Rejected",
            "Removed",
            "Review",
            "Active",
            "Parsed"
          ],
          "mappedType": "enum"
        },
        "solution_id": {
          "name": "solution_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "uuid"
        },
        "name": {
          "name": "name",
          "type": "varchar(100)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 100,
          "mappedType": "string"
        },
        "description": {
          "name": "description",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "text"
        },
        "req_id": {
          "name": "req_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "parent_component_id": {
          "name": "parent_component_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "uuid"
        },
        "initiator_id": {
          "name": "initiator_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "uuid"
        },
        "interface_id": {
          "name": "interface_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "uuid"
        },
        "payload_schema": {
          "name": "payload_schema",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "text"
        },
        "type_name": {
          "name": "type_name",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "kind": {
          "name": "kind",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "enumItems": [
            "Primitive",
            "Product",
            "Sum",
            "Collection"
          ],
          "mappedType": "enum"
        },
        "schema": {
          "name": "schema",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "text"
        },
        "flow_name": {
          "name": "flow_name",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "states": {
          "name": "states",
          "type": "text[]",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "default": "'{}'",
          "mappedType": "array"
        },
        "initial_state": {
          "name": "initial_state",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "final_states": {
          "name": "final_states",
          "type": "text[]",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "default": "'{}'",
          "mappedType": "array"
        },
        "transitions": {
          "name": "transitions",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "text"
        },
        "input_name": {
          "name": "input_name",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "required": {
          "name": "required",
          "type": "boolean",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "default": "false",
          "mappedType": "boolean"
        },
        "operation_id": {
          "name": "operation_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "constraints": {
          "name": "constraints",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "verb": {
          "name": "verb",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "path": {
          "name": "path",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "output_name": {
          "name": "output_name",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "data_type": {
          "name": "data_type",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "format": {
          "name": "format",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "interface_type": {
          "name": "interface_type",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "enumItems": [
            "API",
            "CLI",
            "UI"
          ],
          "mappedType": "enum"
        },
        "functionality_id": {
          "name": "functionality_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "uuid"
        },
        "email": {
          "name": "email",
          "type": "varchar(254)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 254,
          "mappedType": "string"
        },
        "order": {
          "name": "order",
          "type": "int",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "integer"
        },
        "step_type": {
          "name": "step_type",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "enumItems": [
            "Action",
            "Condition"
          ],
          "mappedType": "enum"
        },
        "priority": {
          "name": "priority",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "enumItems": [
            "MUST",
            "SHOULD",
            "COULD",
            "WONT"
          ],
          "mappedType": "enum"
        },
        "primary_actor_id": {
          "name": "primary_actor_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "uuid"
        },
        "outcome_id": {
          "name": "outcome_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "uuid"
        },
        "functional_behavior_id": {
          "name": "functional_behavior_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "uuid"
        },
        "slug": {
          "name": "slug",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 255,
          "mappedType": "string"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "uuid"
        },
        "segmentation": {
          "name": "segmentation",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "enumItems": [
            "Client",
            "Vendor"
          ],
          "mappedType": "enum"
        },
        "category": {
          "name": "category",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "enumItems": [
            "Business Rule",
            "Physical Law",
            "Engineering Decision",
            "Key Stakeholder",
            "Shadow Influencer",
            "Fellow Traveler",
            "Observer"
          ],
          "mappedType": "enum"
        },
        "interest": {
          "name": "interest",
          "type": "int",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "integer"
        },
        "influence": {
          "name": "influence",
          "type": "int",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "integer"
        },
        "scope_id": {
          "name": "scope_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "uuid"
        },
        "trigger_id": {
          "name": "trigger_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "mappedType": "uuid"
        }
      },
      "name": "requirement_versions",
      "schema": "public",
      "indexes": [
        {
          "columnNames": [
            "req_type"
          ],
          "composite": false,
          "keyName": "requirement_versions_req_type_index",
          "constraint": false,
          "primary": false,
          "unique": false
        },
        {
          "keyName": "requirement_versions_pkey",
          "columnNames": [
            "effective_from",
            "requirement_id"
          ],
          "composite": true,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "requirement_versions_requirement_id_foreign": {
          "constraintName": "requirement_versions_requirement_id_foreign",
          "columnNames": [
            "requirement_id"
          ],
          "localTableName": "public.requirement_versions",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "updateRule": "cascade"
        },
        "requirement_versions_solution_id_foreign": {
          "constraintName": "requirement_versions_solution_id_foreign",
          "columnNames": [
            "solution_id"
          ],
          "localTableName": "public.requirement_versions",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "requirement_versions_parent_component_id_foreign": {
          "constraintName": "requirement_versions_parent_component_id_foreign",
          "columnNames": [
            "parent_component_id"
          ],
          "localTableName": "public.requirement_versions",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "requirement_versions_initiator_id_foreign": {
          "constraintName": "requirement_versions_initiator_id_foreign",
          "columnNames": [
            "initiator_id"
          ],
          "localTableName": "public.requirement_versions",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "requirement_versions_interface_id_foreign": {
          "constraintName": "requirement_versions_interface_id_foreign",
          "columnNames": [
            "interface_id"
          ],
          "localTableName": "public.requirement_versions",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "requirement_versions_functionality_id_foreign": {
          "constraintName": "requirement_versions_functionality_id_foreign",
          "columnNames": [
            "functionality_id"
          ],
          "localTableName": "public.requirement_versions",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "requirement_versions_primary_actor_id_foreign": {
          "constraintName": "requirement_versions_primary_actor_id_foreign",
          "columnNames": [
            "primary_actor_id"
          ],
          "localTableName": "public.requirement_versions",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "requirement_versions_outcome_id_foreign": {
          "constraintName": "requirement_versions_outcome_id_foreign",
          "columnNames": [
            "outcome_id"
          ],
          "localTableName": "public.requirement_versions",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "requirement_versions_functional_behavior_id_foreign": {
          "constraintName": "requirement_versions_functional_behavior_id_foreign",
          "columnNames": [
            "functional_behavior_id"
          ],
          "localTableName": "public.requirement_versions",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "requirement_versions_organization_id_foreign": {
          "constraintName": "requirement_versions_organization_id_foreign",
          "columnNames": [
            "organization_id"
          ],
          "localTableName": "public.requirement_versions",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "deleteRule": "set null",
          "updateRule": "cascade"
        },
        "requirement_versions_scope_id_foreign": {
          "constraintName": "requirement_versions_scope_id_foreign",
          "columnNames": [
            "scope_id"
          ],
          "localTableName": "public.requirement_versions",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "deleteRule": "set null",
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "channel_id": {
          "name": "channel_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "team_id": {
          "name": "team_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "channel_name": {
          "name": "channel_name",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "team_name": {
          "name": "team_name",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "solution_id": {
          "name": "solution_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "uuid"
        },
        "created_by_id": {
          "name": "created_by_id",
          "type": "varchar(766)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 766,
          "mappedType": "string"
        },
        "creation_date": {
          "name": "creation_date",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "last_name_refresh": {
          "name": "last_name_refresh",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        }
      },
      "name": "slack_channel_meta",
      "schema": "public",
      "indexes": [
        {
          "keyName": "slack_channel_meta_pkey",
          "columnNames": [
            "channel_id",
            "team_id"
          ],
          "composite": true,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "slack_channel_meta_solution_id_foreign": {
          "constraintName": "slack_channel_meta_solution_id_foreign",
          "columnNames": [
            "solution_id"
          ],
          "localTableName": "public.slack_channel_meta",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    },
    {
      "columns": {
        "slack_user_id": {
          "name": "slack_user_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "team_id": {
          "name": "team_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "app_user_id": {
          "name": "app_user_id",
          "type": "varchar(766)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 766,
          "mappedType": "string"
        },
        "created_by_id": {
          "name": "created_by_id",
          "type": "varchar(766)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 766,
          "mappedType": "string"
        },
        "creation_date": {
          "name": "creation_date",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        }
      },
      "name": "slack_user_meta",
      "schema": "public",
      "indexes": [
        {
          "keyName": "slack_user_meta_pkey",
          "columnNames": [
            "slack_user_id",
            "team_id"
          ],
          "composite": true,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {},
      "nativeEnums": {}
    },
    {
      "columns": {
        "team_id": {
          "name": "team_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "team_name": {
          "name": "team_name",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "organization_id": {
          "name": "organization_id",
          "type": "uuid",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "uuid"
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "text"
        },
        "bot_user_id": {
          "name": "bot_user_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "mappedType": "text"
        },
        "app_id": {
          "name": "app_id",
          "type": "varchar(255)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 255,
          "mappedType": "string"
        },
        "installed_by_id": {
          "name": "installed_by_id",
          "type": "varchar(766)",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 766,
          "mappedType": "string"
        },
        "installation_date": {
          "name": "installation_date",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": false,
          "length": 6,
          "mappedType": "datetime"
        },
        "last_refresh_date": {
          "name": "last_refresh_date",
          "type": "timestamptz",
          "unsigned": false,
          "autoincrement": false,
          "primary": false,
          "nullable": true,
          "length": 6,
          "mappedType": "datetime"
        }
      },
      "name": "slack_workspace_meta",
      "schema": "public",
      "indexes": [
        {
          "keyName": "slack_workspace_meta_pkey",
          "columnNames": [
            "team_id"
          ],
          "composite": false,
          "constraint": true,
          "primary": true,
          "unique": true
        }
      ],
      "checks": [],
      "foreignKeys": {
        "slack_workspace_meta_organization_id_foreign": {
          "constraintName": "slack_workspace_meta_organization_id_foreign",
          "columnNames": [
            "organization_id"
          ],
          "localTableName": "public.slack_workspace_meta",
          "referencedColumnNames": [
            "id"
          ],
          "referencedTableName": "public.requirement",
          "createForeignKeyConstraint": true,
          "updateRule": "cascade"
        }
      },
      "nativeEnums": {}
    }
  ],
  "nativeEnums": {}
}
