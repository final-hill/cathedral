services:
  db:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    restart: unless-stopped
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../.env.local:/.env.local:ro
      - ../.env.keys:/.env.keys:ro
    working_dir: /
    # Use dotenvx to decrypt .env.local and pass to official postgres entrypoint
    # The 'exec' ensures signals (SIGTERM/SIGINT) reach postgres for graceful shutdown
    # Solution from: https://github.com/dotenvx/dotenvx/issues/142#issuecomment-2135087252
    command: >
      sh -c "exec dotenvx run -f .env.local --
      /usr/local/bin/docker-entrypoint.sh postgres
      -c ssl=on
      -c ssl_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
      -c ssl_key_file=/etc/ssl/private/ssl-cert-snakeoil.key"
    networks:
      - app-network

  web:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
      args:
        NODE_VERSION: 24.8.0
        NODE_ENV: development
    depends_on:
      - db
    restart: unless-stopped
    # mounts the workspace folder from the local source tree into the Dev Container.
    # .env.local and .env.keys are accessible in the workspace
    # All npm scripts use dotenvx to decrypt and load variables at runtime
    volumes:
      - ..:/workspace/cathedral:cached
    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"
    ports:
      # - 443:3000
      - 443:443
      # allows Vite to perform hot module reloading.
      - 24678:24678
    networks:
      - app-network
    # puts the Dev Container on the same network as the database, so that it can access it on localhost
    # network_mode: service:db

networks:
  app-network:

volumes:
  postgres-data:
    driver: local
