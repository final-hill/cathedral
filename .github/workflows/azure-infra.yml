name: Deploy Azure Infrastructure

permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:
  # deployment:

jobs:
  validate:
    runs-on: ubuntu-latest
    environment: azure-prod
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Lint Bicep
        run: |
          az bicep build --file ./azure/bicep/main.bicep
      - name: Run what-if
        uses: azure/arm-deploy@v2
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./azure/bicep/main.bicep
          parameters: >
            authOrigin=${{ secrets.AUTH_ORIGIN }}
            authSecret=${{ secrets.AUTH_SECRET }}
            ghClientId=${{ secrets.GH_CLIENT_ID }}
            ghClientSecret=${{ secrets.GH_CLIENT_SECRET }}
            postgresDb=${{ secrets.POSTGRES_DB }}
            postgresHost=${{ secrets.POSTGRES_HOST }}
            postgresPassword=${{ secrets.POSTGRES_PASSWORD }}
            postgresPort=${{ secrets.POSTGRES_PORT }}
            postgresUser=${{ secrets.POSTGRES_USER }}
          scope: 'resourcegroup'
          deploymentMode: 'Validate'
          failOnStdErr: false
          additionalArguments: --what-if
  bicep-deploy:
    needs: validate
    environment: azure-prod
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Deploy Bicep
        uses: azure/arm-deploy@v2
        with:
          deploymentName: github-${{ github.run_number }}
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./azure/bicep/main.bicep
          deploymentMode: 'Complete'
          parameters: >
            authOrigin=${{ secrets.AUTH_ORIGIN }}
            authSecret=${{ secrets.AUTH_SECRET }}
            ghClientId=${{ secrets.GH_CLIENT_ID }}
            ghClientSecret=${{ secrets.GH_CLIENT_SECRET }}
            postgresDb=${{ secrets.POSTGRES_DB }}
            postgresHost=${{ secrets.POSTGRES_HOST }}
            postgresPassword=${{ secrets.POSTGRES_PASSWORD }}
            postgresPort=${{ secrets.POSTGRES_PORT }}
            postgresUser=${{ secrets.POSTGRES_USER }}
          scope: 'resourcegroup'
          failOnStdErr: false
