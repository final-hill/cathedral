# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - app-cathedral

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: azure-prod
    permissions:
      contents: read
      packages: write # Required for GitHub Container Registry

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container    # Use docker-container driver for cache support

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/final-hill/cathedral
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}                    # Creates: v0.26.0 (exact version from release tag)
          type=raw,value=latest,enable={{is_default_branch}} # Creates: latest (for default branch releases)
          type=sha,format=long,prefix=                       # Creates: full commit SHA without prefix (Azure expects this)

    - name: Set up Node.js for build
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'

    - name: Restore Cache
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm install

    - name: Build application
      env:
        NODE_ENV: production
      run: |
        npm run build
        npm run generate-pwa-assets
        echo "Build completed - checking output..."
        ls -la .output/server/

    - name: Run database migrations
      env:
        NODE_ENV: production
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
        POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      run: |
        echo "Running database migrations..."
        npm run orm-debug
        echo "Checking for pending migrations..."
        npm run orm-list-pending-migrations
        echo "Running pending migrations..."
        npm run orm-run-pending-migrations
        echo "Seeding users..."
        npm run orm-seed-users || echo "User seeding failed or users already exist - continuing..."
        echo "Database migrations completed successfully"

    - name: Build and push container image to registry
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          NODE_VERSION=22.15.0
        # Read Docker layer cache from GitHub Actions cache
        cache-from: type=gha
        # Write Docker layer cache to GitHub Actions cache (max mode stores all layers)
        cache-to: type=gha,mode=max
        # Disable attestations to avoid multi-manifest confusion with Azure
        provenance: false
        sbom: false

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: azure-prod
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      contents: read

    steps:
      - name: Deploy to Azure Web App for Containers
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'app-cathedral'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_C9008987F6D9497996601DADEA55033E }}
          images: ghcr.io/final-hill/cathedral:${{ github.sha }}
