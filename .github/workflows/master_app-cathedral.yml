# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Azure

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: npm install, build, and test
        run: |
          npm install
          npm run build
          npm run generate-pwa-assets
          npm run test

      - name: 'Create env file'
        run: |
          mkdir -p .output
          touch .output/.env
          echo "POSTGRES_USER=${{secrets.POSTGRES_USER}}" > .output/.env
          echo "POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}}" >> .output/.env
          echo "POSTGRES_HOST=${{secrets.POSTGRES_HOST}}" >> .output/.env
          echo "POSTGRES_PORT=${{secrets.POSTGRES_PORT}}" >> .output/.env
          echo "POSTGRES_DB=${{secrets.POSTGRES_DB}}" >> .output/.env
          echo "NODE_ENV=production" >> .output/.env
          echo "NUXT_ORIGIN=${{secrets.NUXT_ORIGIN}}" >> .output/.env
          echo "NUXT_SESSION_PASSWORD=${{secrets.NUXT_SESSION_PASSWORD}}" >> .output/.env
          echo "SLACK_ADMIN_MEMBER_ID=${{secrets.SLACK_ADMIN_MEMBER_ID}}" >> .output/.env
          echo "SLACK_BOT_TOKEN=${{secrets.SLACK_BOT_TOKEN}}" >> .output/.env
          echo "SLACK_SIGNING_SECRET=${{secrets.SLACK_SIGNING_SECRET}}" >> .output/.env
          echo "NUXT_AZURE_OPENAI_API_KEY=${{secrets.NUXT_AZURE_OPENAI_API_KEY}}" >> .output/.env
          echo "NUXT_AZURE_OPENAI_API_VERSION=${{secrets.NUXT_AZURE_OPENAI_API_VERSION}}" >> .output/.env
          echo "NUXT_AZURE_OPENAI_ENDPOINT=${{secrets.NUXT_AZURE_OPENAI_ENDPOINT}}" >> .output/.env
          echo "NUXT_AZURE_OPENAI_DEPLOYMENT_ID=${{secrets.NUXT_AZURE_OPENAI_DEPLOYMENT_ID}}" >> .output/.env

      - name: Zip artifact for deployment
        run: |
          cd .output
          zip -r ../release.zip ./* .?*
          cd ..

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Extract .env file
        run: |
          unzip -p release.zip .env > .env

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: npm install
        run: |
          npm install

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_985E9C75492E4188BDF2F8E816CBDC69 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_50BCE71D2A254EA5BD09D7AB3B88DECA }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_C8D8DB3FA67B4820BFBCDEC11FF455DC }}

      - name: Deploy Database
        run: |
          npm run orm-debug
          npm run orm-list-pending-migrations
          npm run orm-run-pending-migrations
          npm run orm-seed-users

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'app-cathedral'
          slot-name: 'Production'
          package: release.zip
