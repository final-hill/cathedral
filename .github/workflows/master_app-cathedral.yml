# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - app-cathedral

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    environment: azure-prod
    permissions:
      contents: read
      packages: write # Required for GitHub Container Registry

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container    # Use docker-container driver for cache support

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/final-hill/cathedral
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}                    # Creates: v0.26.0 (exact version from release tag)
          type=semver,pattern={{major}}.{{minor}}            # Creates: 0.26 (major.minor version)
          type=raw,value=latest,enable={{is_default_branch}} # Creates: latest (for default branch releases)

    - name: Create environment file
      run: |
        echo "${{ secrets.ENV_FILE }}" > .env
        echo "Environment file created with $(wc -l < .env) lines"

    - name: Build and push container image to registry
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./.devcontainer/Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          NODE_VERSION=22.15.0
          NODE_ENV=production
        # Read Docker layer cache from GitHub Actions cache
        cache-from: type=gha
        # Write Docker layer cache to GitHub Actions cache (max mode stores all layers)
        cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: azure-prod
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js for database migrations
        uses: actions/setup-node@v4
        with:
          node-version: '22.15.0'
          cache: 'npm'

      - name: Create environment file for migrations
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
          echo "Environment file created with $(wc -l < .env) lines"

      - name: Install dependencies for migrations
        run: npm ci

      - name: Run database migrations
        run: |
          echo "Running database debug check..."
          npm run orm-debug

          echo "Listing pending migrations..."
          npm run orm-list-pending-migrations

          echo "Running pending migrations..."
          npm run orm-run-pending-migrations

          echo "Seeding users..."
          npm run orm-seed-users

          echo "Database migrations completed successfully"

      - name: Deploy to Azure Web App for Containers
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'app-cathedral'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_C9008987F6D9497996601DADEA55033E }}
          images: ghcr.io/final-hill/cathedral:${{ github.sha }}
